pipeline {
    agent any
    stages {
        stage('Test Cloning Files') {
            steps {
                sh ' ls | grep distribution'
                sh ' ls | grep jenkins'
            }  
        }
        stage('Check and Install Docker') {
            steps {
                script {
                    def dockerCommand = "docker --version"
                    def dockerInstalled = sh(script: dockerCommand, returnStatus: true) == 0

                    if (!dockerInstalled) {
                        echo "Docker is not installed. Installing..."
                        sh 'curl -fsSL https://get.docker.com -o get-docker.sh'
                        sh 'sh get-docker.sh'
                        def currentUserName = sh(script: 'whoami', returnStdout: true).trim()
                        sh "sudo usermod -aG docker ${currentUserName}"
                    } else {
                        echo "Docker is already installed."
                    }
                }
            }
        }
     
        stage('Docker Compose buid ') {
            steps {
                sh 'pwd'
                sh 'docker-compose -f distribution/docker-compose.yml up -d'
            }
        }
        stage('Build Docker compose Containers - PhpMyAdmin') {
            agent any
            steps {
                sh "docker inspect -f '{{json .State.Running}}' distribution_phpmyadmin_1 | grep true"
                sh "docker inspect -f '{{json .State.Running}}' distribution_mysql-db_1 | grep true"
            }
        }
         stage('Check and Install Maven') {
            steps {
                script {
                    
                    def mvnCommand = "mvn -v"
                    def mvnInstalled = sh(script: mvnCommand, returnStatus: true) == 0
                    if (!mvnInstalled) {
                        echo "Maven is not installed. Installing..."
                        //sh 'curl -O https://dlcdn.apache.org/maven/maven-3/3.9.6/source/apache-maven-3.9.6-src.tar.gz'
                        //sh 'tar xf apache-maven-3.9.6-src.tar.gz'
                        sh 'apt update'
                        sh 'apt install maven -y'
                        //env.PATH = "${env.WORKSPACE}/apache-maven-3.9.6/bin:${env.PATH}"
                        sh 'mvn -v'
                        
                    } else {
                        echo "Maven is already installed."
                    }
                }
            }
        }
        // distribution\target\distribution-0.0.1-SNAPSHOT.jar
        stage('Test Distribution project') {
            steps {
                sh 'cd distribution && mvn test -Ptest'
            }
        }
        stage('Build Art√©fact Maven') {
            steps {
                
                script {
                    sh 'cd distribution && mvn verify -Pprod'
                    sh 'ls distribution/target/'
                    sh 'ls ./'
    
                    def pom = readMavenPom file: 'distribution/pom.xml'
                    echo "Project Name: ${pom.artifactId}"
                    echo "Project Version: ${pom.version}"
                    echo "Project GroupId: ${pom.groupId}"
                    sh 'echo ${pom.version}'
                }
            }
        }
    }
}
